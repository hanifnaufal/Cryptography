/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RC4GUI;

import RC4.RC4;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author fariz.ikhwantri
 */
public class RC4StreamCipher extends javax.swing.JFrame {

    public File plaintextFile;
    public File keyFile;
    public RC4 rc4;

    /**
     * Creates new form RC4StreamChipher
     */
    public RC4StreamCipher() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        EncryptionPanel = new javax.swing.JPanel();
        EncryptionButton = new javax.swing.JButton();
        PlaintextLabel = new javax.swing.JLabel();
        KeyLabel = new javax.swing.JLabel();
        KeyButton = new javax.swing.JButton();
        plaintextButton = new javax.swing.JButton();
        DecryptionPanel = new javax.swing.JPanel();
        CiphertextLabel = new javax.swing.JLabel();
        keyDecryptLabel = new javax.swing.JLabel();
        CiphertextButton = new javax.swing.JButton();
        keyDecryptButton = new javax.swing.JButton();
        DecryptButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        EncryptionButton.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        EncryptionButton.setText("Encrypt");
        EncryptionButton.setInheritsPopupMenu(true);
        EncryptionButton.setName(""); // NOI18N
        EncryptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptionButtonActionPerformed(evt);
            }
        });

        PlaintextLabel.setText("Input  Plaintext file ");
        PlaintextLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        KeyLabel.setText("Input Key file");
        KeyLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        KeyButton.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        KeyButton.setText("Input Key");
        KeyButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        KeyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeyButtonActionPerformed(evt);
            }
        });

        plaintextButton.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        plaintextButton.setText("Input Plaintext");
        plaintextButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        plaintextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plaintextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EncryptionPanelLayout = new javax.swing.GroupLayout(EncryptionPanel);
        EncryptionPanel.setLayout(EncryptionPanelLayout);
        EncryptionPanelLayout.setHorizontalGroup(
            EncryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EncryptionPanelLayout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(EncryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EncryptionButton)
                    .addGroup(EncryptionPanelLayout.createSequentialGroup()
                        .addGroup(EncryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PlaintextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(KeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(EncryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(plaintextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(KeyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(77, 77, 77))
        );
        EncryptionPanelLayout.setVerticalGroup(
            EncryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EncryptionPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(EncryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlaintextLabel)
                    .addComponent(plaintextButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EncryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KeyLabel)
                    .addComponent(KeyButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EncryptionButton)
                .addContainerGap(133, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("RC4 Encryption", EncryptionPanel);

        CiphertextLabel.setText("Ciphertext input file");
        CiphertextLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        keyDecryptLabel.setText("key input file");
        keyDecryptLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        CiphertextButton.setText("Input Ciphertext");
        CiphertextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CiphertextButtonActionPerformed(evt);
            }
        });

        keyDecryptButton.setText("Input Key");
        keyDecryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyDecryptButtonActionPerformed(evt);
            }
        });

        DecryptButton.setText("Decrypt");
        DecryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecryptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DecryptionPanelLayout = new javax.swing.GroupLayout(DecryptionPanel);
        DecryptionPanel.setLayout(DecryptionPanelLayout);
        DecryptionPanelLayout.setHorizontalGroup(
            DecryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DecryptionPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(DecryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DecryptButton)
                    .addGroup(DecryptionPanelLayout.createSequentialGroup()
                        .addGroup(DecryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CiphertextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(keyDecryptLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DecryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CiphertextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(keyDecryptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        DecryptionPanelLayout.setVerticalGroup(
            DecryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DecryptionPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(DecryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CiphertextLabel)
                    .addComponent(CiphertextButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DecryptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyDecryptLabel)
                    .addComponent(keyDecryptButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DecryptButton)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("RC4 Decryption", DecryptionPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EncryptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncryptionButtonActionPerformed
        // TODO add your handling code here:
        if (plaintextFile == null && keyFile == null) {
            JOptionPane.showMessageDialog(this, "File plaintext atau File key belum lengkap", "Input belum lengkap", JOptionPane.ERROR_MESSAGE);
            return;
        }
        byte[] keyByte;
        byte[] plainByte;
        //Handle input key
        try {
            keyByte = Files.readAllBytes(keyFile.toPath());
            if (keyByte.length < 16 || keyByte.length > 256) {
                JOptionPane.showMessageDialog(this, "Key harus berukuran 16 - 256 byte", "Kesalahan panjang input key ", JOptionPane.ERROR_MESSAGE);
                return;
            }
            plainByte = Files.readAllBytes(plaintextFile.toPath());
            rc4 = new RC4(keyByte);
            BufferedWriter writer = new BufferedWriter(new FileWriter(new File("Output1.txt")));
            byte S[] = rc4.getS();
            writer.append("Tabel S sesudah permutasi awal\n");
            for (int i = 0; i < S.length; i++) {
                writer.append(String.format("%02X ", S[i]));
                if (i % 10 == 9) {
                    writer.append("\n");
                }
            }
            writer.append("\n\n");                        
            byte cipherText[] = rc4.encrypt(plainByte);
            writer.append("Tabel S sesudah enkripsi\n");
            S = rc4.getS();
            for (int i = 0; i < S.length; i++) {
                writer.append(String.format("%02X ", S[i]));                
                if (i % 10 == 9) {
                    writer.append("\n");
                }
            }
            writer.append("\n");
            writer.flush();
            writer.close();
            
            
            writer = new BufferedWriter(new FileWriter(new File("Output2.txt")));
            for (int i = 0; i < cipherText.length; i++) {
                writer.append((char)cipherText[i]);
            }
            writer.flush();
            writer.close();
            //decrypt
            RC4 rcdec = new RC4(keyByte);
            byte [] decrypt = rcdec.decrypt(cipherText);
            for (int i = 0; i < decrypt.length; i++) {
                System.out.print((char)decrypt[i]);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_EncryptionButtonActionPerformed

    private void plaintextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plaintextButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        int ret = fc.showOpenDialog(null);

        if (ret == JFileChooser.APPROVE_OPTION) {
            FileFilter filter = new FileNameExtensionFilter("Text File", "txt");
            fc.setFileFilter(filter);
            File file = fc.getSelectedFile();
            if (file == null) {
                JOptionPane.showMessageDialog(this, "Tipe file harus berupa text file (.txt)", "Input Salah", JOptionPane.ERROR_MESSAGE);
            } else {
                String filename = file.getAbsolutePath();
                PlaintextLabel.setText(filename);
                this.plaintextFile = file;
            }
        }
    }//GEN-LAST:event_plaintextButtonActionPerformed

    private void KeyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeyButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        int ret = fc.showOpenDialog(null);

        if (ret == JFileChooser.APPROVE_OPTION) {
            FileFilter filter = new FileNameExtensionFilter("Text File", "txt");
            fc.setFileFilter(filter);
            File file = fc.getSelectedFile();
            if (file == null) {
                JOptionPane.showMessageDialog(this, "Tipe file harus berupa text file (.txt)", "Input Salah", JOptionPane.ERROR_MESSAGE);
            } else {
                String filename = file.getAbsolutePath();
                KeyLabel.setText(filename);
                this.keyFile = file;
            }
        }
    }//GEN-LAST:event_KeyButtonActionPerformed

    private void CiphertextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CiphertextButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CiphertextButtonActionPerformed

    private void keyDecryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyDecryptButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyDecryptButtonActionPerformed

    private void DecryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecryptButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DecryptButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {        
//        
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
//                    e.printStackTrace();
//                }
//                new RC4StreamCipher().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CiphertextButton;
    private javax.swing.JLabel CiphertextLabel;
    private javax.swing.JButton DecryptButton;
    private javax.swing.JPanel DecryptionPanel;
    private javax.swing.JButton EncryptionButton;
    private javax.swing.JPanel EncryptionPanel;
    private javax.swing.JButton KeyButton;
    private javax.swing.JLabel KeyLabel;
    private javax.swing.JLabel PlaintextLabel;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton keyDecryptButton;
    private javax.swing.JLabel keyDecryptLabel;
    private javax.swing.JButton plaintextButton;
    // End of variables declaration//GEN-END:variables
}
